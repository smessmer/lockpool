3.0.0 (unreleased)
-----
* Add Arc<LockPool>::lock_owned and Arc<LockPool>::try_lock_owned to allow easier lifetime handling.
* Rename `LockPool` to `SyncLockPool` and add `TokioLockPool` with `TokioLockPool::lock_async` and `TokioLockPool::lock_owned_async` for using LockPools in async code.
* Add Guard trait and Guard::key() to return the key locked by a guard

2.0.1
-----
- Fix links in README
- Fix clippy warnings
- Add more documentation and enforce documentation existence with a #![deny(missing_docs)] lint

2.0.0
-----
- Simplify PoisonError struct (bc breaking)
- Add benchmarks to CI
- Add doc comments to error types
- Fix some links to types in doc comments

1.0.0
------
- Add LockPool::try_lock()
- Add #[must_use] to Guard

0.3.0
------
- Correctly poison the locks when a thread holding one panics
- Don't panic when mutexes are poisoned, but return an Error. The returned error acts as a guard with a lock on the mutex.
- Add LockPool::unpoison()
- Restructure code

0.2.0
------
- Improve documentation
- Add LICENSE files

0.1.0
------
- Initial version
